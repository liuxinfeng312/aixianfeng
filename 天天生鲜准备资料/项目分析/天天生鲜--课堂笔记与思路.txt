
1. 创建名为fresh_shop_env7
	django1.11
	pymysql
	Pillow
2. 创建项目: fresh_shop
3. 创建应用app: user、goods、carts、order
4. 数据库名: freshdb7

5. 初始化数据
	先执行: 4初始化商品分类的数据信息.txt
	在执行: 3初始化商品的数据信息.txt

day01
1. 上午完成作业

模板继承:

父模板:
	base.html和base_main.html

子模板：
	首页index.html
	注册register.html
	登录login.html

修改完以后，再尽可能的修改其他的模板文件

2. 下午完成作业

	1）登录验证（中间件）
	2）顶部导航栏中登录用户信息展示
	3）模板继承（所有的模板全部修改为继承）

day02:

	1. 上午作业
		1）中间件完善
		2）商品详情页面
		3）jd如何实现添加到购物车（登录情况和没登录情况下如何处理）
		4）页面中点击添加和减少时，页面的价格刷新


	2. 下午

	思路: 加入购物车，分为登录情况和没有登录情况

	没有登录情况时，加入到购物车中的数据，其实是加入到session中。

	登录情况时，加入到购物车中的数据，其实是添加到数据库中的购物车表中

	从没有登录跳转到登录情况，将session中的数据保存到数据库中购物车表中

	实现: 
	1. 没有登录时，将数据保存在session
	2. 登录时，将数据保存在数据库
		拆分: 登录时，将数据保存在session中。也就是所登录情况下，数据库中没有数据，数据其实是在session中。

	保存到session中的数据结构：goods_id， nums， is_select
	goods: [
				[goods_id, nums, is_select], 
				[goods_id, nums, is_select],
				[goods_id, nums, is_select] 
				.....
			]


	3. 没有登录到登录时，将session数据同步到数据库中
		中间件
			判断用户是否登录，如果用户登录，则同步session数据到数据库中
							如果没有登录，不管

		登录时，做数据从session同步到数据库中。(不推荐)


	下午作业:
		1. base_main.html模板中购物车中数量的刷新（ajax）
		2. 商品详情页面中添加商品时，自定义商品数量和商品的最新库存数据进行比较。
		3. 中间件，做数据同步。将session中数据同步到数据库中


day03:

    1. 数据同步思路:
    	没登录情况，向购物车中加入数据其实是加入到session中
    	登录情况，向购物车中加数据也是加入到session中，只是在中间件做数据同步时，将session数据同步到数据库中

    	如何做同步:

    		1）没登录跳转到登录时，session数据和数据库中数据同时更新
    			session数据不存在于数据库中，则购物车数据增加
    			session数据存在于数据库中，则购物车数据更新

    			同时将购物车中数据同步到session中
    		2） 没登录，不用做同步
    	
    	购物车中数据删除:

    		1）登录时，删除购物车中数据其实就是删除数据库购物车表中的数据，然后再删除session中的数据

    		2）没有登录时，删除购物车中数据其实就是删除session中数据

    2. 下午作业
        1）购物车中商品的勾选状态修改
        2）购物车中商品的总价和勾选的商品总件数
        3）把所有功能梳理一遍（中间件）




day04:

   1. 结算思路:
   		1） 登录情况，继续访问结算页面
   		2） 没有登录情况，跳转到登录页面

   作业:
   		1）商品列表页面
   		2）搜索
   		3）购物车中商品复选框和价格刷新
   		4）用户中心地址解析

    

